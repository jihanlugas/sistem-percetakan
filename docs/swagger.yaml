definitions:
  constant.TransactionType:
    enum:
    - 1
    - -1
    type: integer
    x-enum-varnames:
    - TRANSACTION_TYPE_DEBIT
    - TRANSACTION_TYPE_KREDIT
  request.AddPhase:
    properties:
      orderphaseId:
        type: string
    required:
    - orderphaseId
    type: object
  request.AddTransaction:
    properties:
      amount:
        type: integer
      description:
        type: string
      name:
        type: string
    required:
    - amount
    - name
    type: object
  request.ChangePassword:
    properties:
      confirmPasswd:
        maxLength: 200
        type: string
      currentPasswd:
        maxLength: 200
        type: string
      passwd:
        maxLength: 200
        type: string
    required:
    - confirmPasswd
    - currentPasswd
    - passwd
    type: object
  request.CreateCustomer:
    properties:
      address:
        type: string
      companyId:
        type: string
      description:
        type: string
      email:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
    required:
    - address
    - companyId
    - description
    - email
    - name
    type: object
  request.CreateFinishing:
    properties:
      companyId:
        type: string
      description:
        type: string
      name:
        type: string
      orderId:
        type: string
      price:
        type: integer
      qty:
        type: integer
      total:
        type: integer
    required:
    - name
    type: object
  request.CreateOrder:
    properties:
      companyId:
        type: string
      customerId:
        type: string
      description:
        type: string
      finishings:
        items:
          $ref: '#/definitions/request.CreateOrderFinishing'
        type: array
      name:
        type: string
      newCustomer:
        type: string
      newCustomerPhone:
        type: string
      orderphaseId:
        type: string
      prints:
        items:
          $ref: '#/definitions/request.CreateOrderPrint'
        type: array
    required:
    - companyId
    - name
    type: object
  request.CreateOrderFinishing:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: integer
      qty:
        type: integer
      total:
        type: integer
    required:
    - name
    type: object
  request.CreateOrderPrint:
    properties:
      description:
        type: string
      isDuplex:
        type: boolean
      name:
        type: string
      pageCount:
        type: integer
      paperId:
        type: string
      price:
        type: integer
      qty:
        type: integer
      total:
        type: integer
    required:
    - name
    type: object
  request.CreatePaper:
    properties:
      companyId:
        type: string
      defaultPrice:
        type: integer
      defaultPriceDuplex:
        type: integer
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  request.CreatePrint:
    properties:
      companyId:
        type: string
      description:
        type: string
      isDuplex:
        type: boolean
      name:
        type: string
      orderId:
        type: string
      pageCount:
        type: integer
      paperId:
        type: string
      price:
        type: integer
      qty:
        type: integer
      total:
        type: integer
    required:
    - name
    type: object
  request.CreateTransaction:
    properties:
      amount:
        type: integer
      companyId:
        type: string
      description:
        type: string
      name:
        type: string
      orderId:
        type: string
      type:
        $ref: '#/definitions/constant.TransactionType'
    required:
    - amount
    - companyId
    - name
    type: object
  request.CreateUser:
    properties:
      address:
        type: string
      birthDt:
        type: string
      birthPlace:
        type: string
      companyId:
        type: string
      email:
        maxLength: 200
        type: string
      fullname:
        maxLength: 80
        type: string
      passwd:
        maxLength: 200
        type: string
      phoneNumber:
        maxLength: 20
        type: string
      username:
        maxLength: 20
        type: string
    required:
    - email
    - fullname
    - passwd
    - phoneNumber
    - username
    type: object
  request.Signin:
    properties:
      passwd:
        example: "123456"
        maxLength: 200
        type: string
      username:
        example: admindemo
        type: string
    required:
    - passwd
    - username
    type: object
  request.UpdateCompany:
    properties:
      address:
        type: string
      description:
        type: string
      email:
        type: string
      invoiceNote:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
    required:
    - address
    - email
    - name
    - phoneNumber
    type: object
  request.UpdateCustomer:
    properties:
      address:
        type: string
      description:
        type: string
      email:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
    required:
    - name
    type: object
  request.UpdateFinishing:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: integer
      qty:
        type: integer
      total:
        type: integer
    required:
    - name
    type: object
  request.UpdateOrder:
    properties:
      customerId:
        type: string
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  request.UpdatePaper:
    properties:
      defaultPrice:
        type: integer
      defaultPriceDuplex:
        type: integer
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  request.UpdatePrint:
    properties:
      description:
        type: string
      isDuplex:
        type: boolean
      name:
        type: string
      pageCount:
        type: integer
      paperId:
        type: string
      price:
        type: integer
      qty:
        type: integer
      total:
        type: integer
    required:
    - name
    type: object
  request.UpdateTransaction:
    properties:
      amount:
        type: integer
      description:
        type: string
      name:
        type: string
      type:
        $ref: '#/definitions/constant.TransactionType'
    required:
    - amount
    - name
    type: object
  request.UpdateUser:
    properties:
      address:
        type: string
      birthDt:
        type: string
      birthPlace:
        type: string
      email:
        maxLength: 200
        type: string
      fullname:
        maxLength: 80
        type: string
      phoneNumber:
        maxLength: 20
        type: string
      username:
        maxLength: 20
        type: string
    required:
    - email
    - fullname
    - phoneNumber
    - username
    type: object
  response.Response:
    properties:
      code:
        type: integer
      error:
        type: string
      message:
        type: string
      payload:
        type: object
      status:
        type: boolean
    type: object
host: localhost:1323
info:
  contact: {}
  description: This is a sample server celler server.
  title: Swagger sistem percetakan API
  version: "1.0"
paths:
  /auth/init:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Authentication
  /auth/refresh-token:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Authentication
  /auth/sign-in:
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.Signin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      tags:
      - Authentication
  /auth/sign-out:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      tags:
      - Authentication
  /company/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UpdateCompany'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Company
  /customer:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: address
        type: string
      - in: query
        name: companyId
        type: string
      - in: query
        name: companyName
        type: string
      - in: query
        name: createName
        type: string
      - in: query
        name: description
        type: string
      - in: query
        name: email
        type: string
      - in: query
        name: endDt
        type: string
      - example: 10
        in: query
        name: limit
        type: integer
      - in: query
        name: name
        type: string
      - example: 1
        in: query
        name: page
        type: integer
      - in: query
        name: phoneNumber
        type: string
      - in: query
        name: preloads
        type: string
      - example: ""
        in: query
        name: sortField
        type: string
      - example: ""
        in: query
        name: sortOrder
        type: string
      - in: query
        name: startDt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Customer
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CreateCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Customer
  /customer/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Customer
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Customer
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UpdateCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Customer
  /dashboard/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Order
  /finishing:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: companyId
        type: string
      - in: query
        name: companyName
        type: string
      - in: query
        name: createName
        type: string
      - in: query
        name: description
        type: string
      - in: query
        name: endDt
        type: string
      - in: query
        name: endTotalFinishing
        type: integer
      - example: 10
        in: query
        name: limit
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: orderId
        type: string
      - in: query
        name: orderName
        type: string
      - example: 1
        in: query
        name: page
        type: integer
      - in: query
        name: preloads
        type: string
      - example: ""
        in: query
        name: sortField
        type: string
      - example: ""
        in: query
        name: sortOrder
        type: string
      - in: query
        name: startDt
        type: string
      - in: query
        name: startTotalFinishing
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Finishing
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CreateFinishing'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Finishing
  /finishing/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Finishing
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Finishing
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UpdateFinishing'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Finishing
  /order:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: companyId
        type: string
      - in: query
        name: customerId
        type: string
      - in: query
        name: description
        type: string
      - in: query
        name: endDt
        type: string
      - in: query
        name: endTotalOrder
        type: integer
      - example: 10
        in: query
        name: limit
        type: integer
      - in: query
        name: name
        type: string
      - example: 1
        in: query
        name: page
        type: integer
      - in: query
        name: phaseId
        type: string
      - in: query
        name: preloads
        type: string
      - example: ""
        in: query
        name: sortField
        type: string
      - example: ""
        in: query
        name: sortOrder
        type: string
      - in: query
        name: startDt
        type: string
      - in: query
        name: startTotalOrder
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Order
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CreateOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Order
  /order/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Order
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Order
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UpdateOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Order
  /order/{id}/add-phase:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.AddPhase'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Order
  /order/{id}/add-transaction:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.AddTransaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Order
  /order/{id}/invoice:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Order
  /order/{id}/spk:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Order
  /paper:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: companyId
        type: string
      - in: query
        name: companyName
        type: string
      - in: query
        name: createName
        type: string
      - in: query
        name: description
        type: string
      - example: 10
        in: query
        name: limit
        type: integer
      - in: query
        name: name
        type: string
      - example: 1
        in: query
        name: page
        type: integer
      - in: query
        name: preloads
        type: string
      - example: ""
        in: query
        name: sortField
        type: string
      - example: ""
        in: query
        name: sortOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Paper
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CreatePaper'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Paper
  /paper/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Paper
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Paper
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePaper'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Paper
  /phase:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: companyId
        type: string
      - in: query
        name: companyName
        type: string
      - in: query
        name: createName
        type: string
      - in: query
        name: description
        type: string
      - example: 10
        in: query
        name: limit
        type: integer
      - in: query
        name: name
        type: string
      - example: 1
        in: query
        name: page
        type: integer
      - in: query
        name: preloads
        type: string
      - example: ""
        in: query
        name: sortField
        type: string
      - example: ""
        in: query
        name: sortOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Phase
  /photo/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Photo
  /print:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: companyId
        type: string
      - in: query
        name: companyName
        type: string
      - in: query
        name: createName
        type: string
      - in: query
        name: description
        type: string
      - in: query
        name: endDt
        type: string
      - in: query
        name: endTotalPrint
        type: integer
      - in: query
        name: isDuplex
        type: boolean
      - example: 10
        in: query
        name: limit
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: orderId
        type: string
      - in: query
        name: orderName
        type: string
      - example: 1
        in: query
        name: page
        type: integer
      - in: query
        name: paperId
        type: string
      - in: query
        name: paperName
        type: string
      - in: query
        name: preloads
        type: string
      - example: ""
        in: query
        name: sortField
        type: string
      - example: ""
        in: query
        name: sortOrder
        type: string
      - in: query
        name: startDt
        type: string
      - in: query
        name: startTotalPrint
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Print
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CreatePrint'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Print
  /print/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Print
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Print
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePrint'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Print
  /print/{id}/spk:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Print
  /transaction:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: amount
        type: integer
      - in: query
        name: companyId
        type: string
      - in: query
        name: companyName
        type: string
      - in: query
        name: createName
        type: string
      - in: query
        name: description
        type: string
      - in: query
        name: endAmount
        type: integer
      - in: query
        name: endDt
        type: string
      - example: 10
        in: query
        name: limit
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: orderId
        type: string
      - in: query
        name: orderName
        type: string
      - example: 1
        in: query
        name: page
        type: integer
      - in: query
        name: preloads
        type: string
      - example: ""
        in: query
        name: sortField
        type: string
      - example: ""
        in: query
        name: sortOrder
        type: string
      - in: query
        name: startAmount
        type: integer
      - in: query
        name: startDt
        type: string
      - enum:
        - 1
        - -1
        in: query
        name: type
        type: integer
        x-enum-varnames:
        - TRANSACTION_TYPE_DEBIT
        - TRANSACTION_TYPE_KREDIT
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Transaction
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CreateTransaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Transaction
  /transaction/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Transaction
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Transaction
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UpdateTransaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Transaction
  /user:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: address
        type: string
      - in: query
        name: birthPlace
        type: string
      - in: query
        name: companyId
        type: string
      - in: query
        name: createName
        type: string
      - in: query
        name: email
        type: string
      - in: query
        name: fullname
        type: string
      - example: 10
        in: query
        name: limit
        type: integer
      - example: 1
        in: query
        name: page
        type: integer
      - in: query
        name: phoneNumber
        type: string
      - in: query
        name: preloads
        type: string
      - example: ""
        in: query
        name: sortField
        type: string
      - example: ""
        in: query
        name: sortOrder
        type: string
      - in: query
        name: username
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - User
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - User
  /user/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - User
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - User
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - User
  /user/change-password:
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.ChangePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
